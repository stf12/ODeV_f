// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0xc0dc20ae
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _cursor_32[];
extern const unsigned char _dark_buttons_round_edge_icon_button[];
extern const unsigned char _dark_buttons_round_edge_icon_button_pressed[];
extern const unsigned char _dark_buttons_round_edge_small[];
extern const unsigned char _dark_buttons_round_edge_small_pressed[];
extern const unsigned char _dark_icons_document_32[];
extern const unsigned char _dark_icons_done_32[];
extern const unsigned char _dark_icons_go_back_32[];
extern const unsigned char _dark_icons_go_next_32[];
extern const unsigned char _dark_pageindicator_dot_indicator_small_highlight[];
extern const unsigned char _dark_pageindicator_dot_indicator_small_normal[];
extern const unsigned char _edit_cut_32[];
extern const unsigned char _edit_paste_32[];
extern const unsigned char _left_arrow_small[];
extern const unsigned char _odev_f_logo[];
extern const unsigned char _snipping_tool_32[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _cursor_32, 0, 32, 32, 10, 10, 7, 9, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, 46, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _dark_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, 50, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_document_32, 0, 29, 32, 1, 2, 3, 26, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_done_32, 0, 32, 32, 7, 3, 11, 10, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_go_back_32, 0, 32, 30, 1, 2, 8, 24, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_go_next_32, 0, 32, 30, 23, 2, 8, 24, touchgfx::Bitmap::ARGB8888 },
    { _dark_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 },
    { _dark_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, 9, touchgfx::Bitmap::ARGB8888 },
    { _edit_cut_32, 0, 32, 32, 13, 13, 5, 6, touchgfx::Bitmap::ARGB8888 },
    { _edit_paste_32, 0, 32, 32, 2, 4, 21, 25, touchgfx::Bitmap::ARGB8888 },
    { _left_arrow_small, 0, 53, 42, 11, 10, 42, 22, touchgfx::Bitmap::ARGB8888 },
    { _odev_f_logo, 0, 266, 147, 0, 0, 266, 147, touchgfx::Bitmap::RGB565 },
    { _snipping_tool_32, 0, 32, 32, 7, 6, 11, 11, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

